# /etc/nginx/nginx.conf

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
# include /etc/nginx/modules/*.conf;

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;

	# Don't tell nginx version to the clients. Default is 'on'.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable. Default is '1m'.
	client_max_body_size 1m;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write(). Default is off.
	sendfile on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. Default is 'off'.
	tcp_nopush on;


	# Enables the specified protocols. Default is TLSv1 TLSv1.1 TLSv1.2.
	# TIP: If you're not obligated to support ancient clients, remove TLSv1.1.
	ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	# TIP: Generate with: `openssl dhparam -out /etc/ssl/nginx/dh2048.pem 2048`
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	# Default is 'off'.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	# Default is 'none'.
	ssl_session_cache shared:SSL:2m;

	# Specifies a time during which a client may reuse the session parameters.
	# Default is '5m'.
	ssl_session_timeout 1h;

	# Disable TLS session tickets (they are insecure). Default is 'on'.
	ssl_session_tickets off;


	# Enable gzipping of responses.
	#gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
	gzip_vary on;


	# Helper variable for proxying websockets.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}


	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;


	# Includes virtual hosts configs.
	upstream apiserver {
    ip_hash;
    server 127.0.0.1:7125;
	}

	upstream mjpgstreamer1 {
			ip_hash;
			server 127.0.0.1:8080;
	}

	upstream mjpgstreamer2 {
			ip_hash;
			server 127.0.0.1:8081;
	}

	upstream mjpgstreamer3 {
			ip_hash;
			server 127.0.0.1:8082;
	}

	upstream mjpgstreamer4 {
			ip_hash;
			server 127.0.0.1:8083;
	}

	server {
		listen 8888 default_server;
		# uncomment the next line to activate IPv6
		# listen [::]:80 default_server;

		access_log /var/log/nginx/mainsail-access.log;
		error_log /var/log/nginx/mainsail-error.log;

		# disable this section on smaller hardware like a pi zero
		gzip on;
		gzip_vary on;
		gzip_proxied any;
		gzip_proxied expired no-cache no-store private auth;
		gzip_comp_level 4;
		gzip_buffers 16 8k;
		gzip_http_version 1.1;
		gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/json application/xml;

		# web_path from mainsail static files
		root /home/pi/mainsail;

		index index.html;
		server_name _;

		# disable max upload size checks
		client_max_body_size 0;

		# disable proxy request buffering
		proxy_request_buffering off;

		location / {
				try_files $uri $uri/ /index.html;
		}

		location = /index.html {
				add_header Cache-Control "no-store, no-cache, must-revalidate";
		}

		location /websocket {
				proxy_pass http://apiserver/websocket;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection $connection_upgrade;
				proxy_set_header Host $http_host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_read_timeout 86400;
		}

		location ~ ^/(printer|api|access|machine|server)/ {
				proxy_pass http://apiserver$request_uri;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Host $http_host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Scheme $scheme;
		}

		location /webcam/ {
				postpone_output 0;
				proxy_buffering off;
				proxy_ignore_headers X-Accel-Buffering;
				access_log off;
				error_log off;
				proxy_pass http://mjpgstreamer1/;
		}

		location /webcam2/ {
				postpone_output 0;
				proxy_buffering off;
				proxy_ignore_headers X-Accel-Buffering;
				access_log off;
				error_log off;
				proxy_pass http://mjpgstreamer2/;
		}

		location /webcam3/ {
				postpone_output 0;
				proxy_buffering off;
				proxy_ignore_headers X-Accel-Buffering;
				access_log off;
				error_log off;
				proxy_pass http://mjpgstreamer3/;
		}

		location /webcam4/ {
				postpone_output 0;
				proxy_buffering off;
				proxy_ignore_headers X-Accel-Buffering;
				access_log off;
				error_log off;
				proxy_pass http://mjpgstreamer4/;
		}
	}
}
